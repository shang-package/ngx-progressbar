{"version":3,"file":"ngx-progressbar.umd.js","sources":["../../src/modules/progress.module.ts","../../index.ts","../../src/components/progress.component.ts","../../src/components/progress-bar.component.ts","../../src/services/interceptor.provider.ts","../../src/services/progress.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgressBarComponent } from '../components/progress-bar.component';\nimport { ProgressComponent } from '../components/progress.component';\nimport { NgProgressService } from '../services/progress.service';\nexport class NgProgressModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    ProgressComponent,\n    ProgressBarComponent\n  ],\n  exports: [\n    ProgressComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    NgProgressService\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgProgressModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProgressModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgProgressModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgProgressService,NgProgressInterceptor,NgProgressModule} from './public_api';\n\nexport {ProgressBarComponent as ɵb} from './src/components/progress-bar.component';\nexport {ProgressComponent as ɵa} from './src/components/progress.component';","import {\n  Component, Input, ChangeDetectionStrategy, OnChanges, SimpleChanges, OnDestroy\n} from '@angular/core';\nimport { NgProgressService } from '../services/progress.service';\nexport class ProgressComponent implements OnChanges, OnDestroy {\n/**\n * Progress options\n */\nease = 'linear';\n   positionUsing = 'margin';\n   showSpinner = true;\n   direction = 'leftToRightIncreased';\n   color = '#CC181E';\n   thick = false;\n   maximum = 1;\n   minimum = 0.08;\n   speed = 200;\n   trickleSpeed = 300;\n/**\n * Start/Stop Progressbar\n */\ntoggle;\n/**\n * @param {?} progress\n */\nconstructor(public progress: NgProgressService) {\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n\n    const /** @type {?} */ minChng = changes.minimum;\n    const /** @type {?} */ maxChng = changes.maximum;\n    const /** @type {?} */ spdChng = changes.speed;\n    const /** @type {?} */ tklSpdChng = changes.trickleSpeed;\n    const /** @type {?} */ tglChng = changes.toggle;\n\n    if (minChng) {\n      if (typeof minChng.currentValue !== 'undefined' && minChng.currentValue !== minChng.previousValue) {\n        if (minChng.currentValue < 0 || minChng.currentValue > 1) {\n          throw 'Input [minimum] must be between 0 and 1';\n        } else {\n          this.progress.minimum = minChng.currentValue;\n        }\n      }\n    }\n\n    if (maxChng) {\n      if (typeof maxChng.currentValue !== 'undefined' && maxChng.currentValue !== maxChng.previousValue) {\n        if (maxChng.currentValue < 0 || maxChng.currentValue > 1) {\n          throw 'Input [maximum] must be between 0 and 1';\n        } else {\n          this.progress.maximum = maxChng.currentValue;\n        }\n      }\n    }\n\n    if (spdChng) {\n      if (typeof spdChng.currentValue !== 'undefined' && spdChng.currentValue !== spdChng.previousValue) {\n        this.progress.speed = spdChng.currentValue;\n      }\n    }\n\n    if (tklSpdChng) {\n      if (typeof tklSpdChng.currentValue !== 'undefined' && tklSpdChng.currentValue !== tklSpdChng.previousValue) {\n        this.progress.trickleSpeed = tklSpdChng.currentValue;\n      }\n    }\n\n    if (tglChng) {\n      if (typeof tglChng.currentValue !== 'undefined' && tglChng.currentValue !== tglChng.previousValue) {\n        if (tglChng.currentValue) {\n          this.progress.start();\n        } else {\n          this.progress.done();\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.progress.state.unsubscribe();\n    this.progress.trickling.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ng-progress',\n  template: `\n  <ng-progress-bar\n    [speed]=\"speed\"\n    [positionUsing]=\"positionUsing\"\n    [ease]=\"ease\"\n    [showSpinner]=\"showSpinner\"\n    [direction]=\"direction\"\n    [color]=\"color\"\n    [thick]=\"thick\"\n    [state]=\"progress.state | async\"\n  ></ng-progress-bar>`,\n  styles: [`\n  :host {\n    z-index: 999999;\n    pointer-events: none;\n    position: relative;\n  }`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgProgressService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ease': [{ type: Input },],\n'positionUsing': [{ type: Input },],\n'showSpinner': [{ type: Input },],\n'direction': [{ type: Input },],\n'color': [{ type: Input },],\n'thick': [{ type: Input },],\n'maximum': [{ type: Input },],\n'minimum': [{ type: Input },],\n'speed': [{ type: Input },],\n'trickleSpeed': [{ type: Input },],\n'toggle': [{ type: Input },],\n};\n}\n\nfunction ProgressComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressComponent.ctorParameters;\n/** @type {?} */\nProgressComponent.propDecorators;\n/**\n * Progress options\n * @type {?}\n */\nProgressComponent.prototype.ease;\n/** @type {?} */\nProgressComponent.prototype.positionUsing;\n/** @type {?} */\nProgressComponent.prototype.showSpinner;\n/** @type {?} */\nProgressComponent.prototype.direction;\n/** @type {?} */\nProgressComponent.prototype.color;\n/** @type {?} */\nProgressComponent.prototype.thick;\n/** @type {?} */\nProgressComponent.prototype.maximum;\n/** @type {?} */\nProgressComponent.prototype.minimum;\n/** @type {?} */\nProgressComponent.prototype.speed;\n/** @type {?} */\nProgressComponent.prototype.trickleSpeed;\n/**\n * Start/Stop Progressbar\n * @type {?}\n */\nProgressComponent.prototype.toggle;\n/** @type {?} */\nProgressComponent.prototype.progress;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nexport class ProgressBarComponent {\n\n   state;\n   positionUsing;\n   ease;\n   speed;\n   showSpinner;\n   direction;\n   thick;\n   color;\n/**\n * Styles for progressbar\n * @return {?}\n */\nbarStyles() {\n    let /** @type {?} */ styles = {\n      transition: `all ${this.speed}ms ${this.ease}`,\n      backgroundColor: this.color\n    };\n/**\n * Get positioning value\n */\nconst n = (!this.state.value) ? {\n      leftToRightIncreased: -100,\n      leftToRightReduced: 0,\n      rightToLeftIncreased: 100,\n      rightToLeftReduced: 0\n    }[this.direction] : this.toPercentage(this.state.value);\n\n    switch (this.positionUsing) {\n      case 'translate3d':\n        styles = Object.assign({}, styles, {\n          transform: `translate3d(${n}%,0,0)`,\n          '-webkit-transform': `translate3d(${n}%,0,0)`,\n          '-moz-transform': `translate3d(${n}%,0,0)`,\n          '-o-transform': `translate3d(${n}%,0,0)`,\n          '-ms-transform': `translate3d(${n}%,0,0)`\n        });\n        break;\n      case 'translate':\n        styles = Object.assign({}, styles, {\n          transform: `translate(${n}%,0)`,\n          '-webkit-transform': `translate(${n}%,0)`,\n          '-moz-transform': `translate(${n}%,0)`,\n          '-o-transform': `translate(${n}%,0)`,\n          '-ms-transform': `translate(${n}%,0)`\n        });\n        break;\n      default:\n        styles = Object.assign({}, styles, {\n          marginLeft: `${n}%`\n        });\n    }\n    return styles;\n  }\n/**\n * Styles for progressbar tail\n * @return {?}\n */\nshadowStyles() {\n    return {\n      boxShadow: `0 0 10px ${this.color}, 0 0 5px ${this.color}`\n    };\n  }\n/**\n * @param {?} n\n * @return {?}\n */\ntoPercentage(n) {\n    return ({\n      leftToRightIncreased: -1 + n,\n      leftToRightReduced: -n,\n      rightToLeftIncreased: 1 - n,\n      rightToLeftReduced: n\n    }[this.direction]) * 100;\n  }\n/**\n * @return {?}\n */\nspinnerClasses() {\n    return {\n      leftToRightIncreased: 'clockwise',\n      leftToRightReduced: 'anti-clockwise',\n      rightToLeftIncreased: 'anti-clockwise',\n      rightToLeftReduced: 'clockwise'\n    }[this.direction];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ng-progress-bar',\n  template: `\n  <div class=\"ng-progress\" *ngIf=\"state\" [class.active]=\"state.active\" [class.thick]=\"thick\">\n    <div class=\"bar\" [ngStyle]=\"barStyles()\">\n      <div class=\"bar-shadow\" [ngStyle]=\"shadowStyles()\"></div>\n    </div>\n    <div *ngIf=\"showSpinner\" class=\"spinner\" [ngClass]=\"spinnerClasses()\">\n      <div class=\"spinner-icon\" [style.borderTopColor]=\"color\" [style.borderLeftColor]=\"color\"></div>\n    </div>\n  </div>`,\n  styles: [`\n  .ng-progress {\n    z-index: 999999;\n    top: 0;\n    left: 0;\n    width: 100%;\n    position: fixed;\n    zoom: 1;\n    filter: alpha(opacity=0);\n    opacity: 0;\n    transition: opacity 200ms linear;\n  }\n\n  .active {\n    filter: alpha(opacity=100);\n    opacity: 1;\n    transition: none;\n  }\n\n  .bar {\n    position: absolute;\n    width: 100%;\n    height: 2px;\n  }\n\n  .thick .bar {\n    height: 3px;\n  }\n\n  .bar-shadow {\n    display: block;\n    position: absolute;\n    right: 0;\n    top: -3px;\n    width: 100px;\n    height: 100%;\n    opacity: 1.0;\n    -webkit-transform: rotate(3deg);\n    -ms-transform: rotate(3deg);\n    -moz-transform: rotate(3deg);\n    transform: rotate(3deg);\n  }\n\n\n  .thick .bar-shadow {\n    top: -4px;\n    -webkit-transform: rotate(4deg);\n    -ms-transform: rotate(4deg);\n    -moz-transform: rotate(4deg);\n    transform: rotate(4deg);\n  }\n\n  .thick .spinner-icon {\n    width: 24px;\n    height: 24px;\n    border: solid 3px transparent;\n  }\n\n  /* Remove these to get rid of the spinner */\n  .spinner {\n    display: block;\n    position: fixed;\n    z-index: 1031;\n    top: 15px;\n    right: 15px;\n  }\n\n  .spinner-icon {\n    width: 18px;\n    height: 18px;\n    box-sizing: border-box;\n\n    border: solid 2px transparent;\n    border-radius: 50%;\n\n    -webkit-animation: nprogress-spinner 400ms linear infinite;\n    -moz-animation: nprogress-spinner 400ms linear infinite;\n    animation: nprogress-spinner 400ms linear infinite;\n  }\n\n  .anti-clockwise .spinner-icon {\n    -webkit-animation-direction: reverse;\n    -moz-animation-direction: rotate(0deg);\n    animation-direction: reverse;\n  }\n\n  @-webkit-keyframes nprogress-spinner {\n    0% {\n      -webkit-transform: rotate(0deg);\n      -moz-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      -moz-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes nprogress-spinner {\n    0% {\n      -webkit-transform: rotate(0deg);\n      -moz-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      -moz-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }`],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'positionUsing': [{ type: Input },],\n'ease': [{ type: Input },],\n'speed': [{ type: Input },],\n'showSpinner': [{ type: Input },],\n'direction': [{ type: Input },],\n'thick': [{ type: Input },],\n'color': [{ type: Input },],\n};\n}\n\nfunction ProgressBarComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressBarComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressBarComponent.ctorParameters;\n/** @type {?} */\nProgressBarComponent.propDecorators;\n/** @type {?} */\nProgressBarComponent.prototype.state;\n/** @type {?} */\nProgressBarComponent.prototype.positionUsing;\n/** @type {?} */\nProgressBarComponent.prototype.ease;\n/** @type {?} */\nProgressBarComponent.prototype.speed;\n/** @type {?} */\nProgressBarComponent.prototype.showSpinner;\n/** @type {?} */\nProgressBarComponent.prototype.direction;\n/** @type {?} */\nProgressBarComponent.prototype.thick;\n/** @type {?} */\nProgressBarComponent.prototype.color;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { NgProgressService } from './progress.service';\nimport'rxjs/add/operator/finally';\nexport class NgProgressInterceptor implements HttpInterceptor {\n/**\n * @param {?} progressService\n */\nconstructor(public progressService: NgProgressService) {\n  }\n/**\n * @param {?} req\n * @param {?} next\n * @return {?}\n */\nintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.progressService.start();\n    return next.handle(req).finally(() => {\n      this.progressService.done();\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgProgressService, },\n];\n}\n\nfunction NgProgressInterceptor_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProgressInterceptor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgProgressInterceptor.ctorParameters;\n/** @type {?} */\nNgProgressInterceptor.prototype.progressService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\n\nimport'rxjs/add/observable/timer';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/do';\nimport'rxjs/add/operator/takeWhile';\n/**\n * Helper\n */\nconst clamp = (n, min, max) => {\n  if (n < min) {\n    return min;\n  }\n  if (n > max) {\n    return max;\n  }\n  return n;\n};\nexport class NgProgressService {\n/**\n * Progress state\n */\nstate = new Subject();\n/**\n * Trickling stream\n */\ntrickling = new Subject();\n\n  progress = 0;\n  maximum = 1;\n  minimum = 0.08;\n  speed = 200;\n  trickleSpeed = 300;\nprivate pendingProgress = 0;\nconstructor() {\n\n    this.trickling.switchMap(() => {\n      return Observable\n        .timer(0, this.trickleSpeed)\n        .takeWhile(() => this.isStarted())\n        .do(() => this.inc());\n    }).subscribe();\n  }\n/**\n * @return {?}\n */\nbegin() {\n    this.pendingProgress++;\n    this.start();\n  }\n/**\n * @return {?}\n */\nend() {\n    this.pendingProgress--;\n    if (this.pendingProgress <= 0) {\n      this.done();\n    }\n  }\n/**\n * @return {?}\n */\nreset() {\n    this.pendingProgress = 0;\n    this.done();\n  }\n/**\n * Start\n * @return {?}\n */\nstart() {\n    if (!this.isStarted()) {\n      this.set(this.minimum);\n    }\n    this.trickling.next();\n  }\n/**\n * Done\n * @return {?}\n */\ndone() {\n    /** if started complete the progress */\n    if (this.isStarted()) {\n      this.set(.3 + .5 * Math.random());\n      this.set(this.maximum);\n    }\n  }\n/**\n * Increment Progress\n * @param {?=} amount\n * @return {?}\n */\ninc(amount?) {\n    let /** @type {?} */ n = this.progress;\n    /** if it hasn't start, start */\n    if (!this.isStarted()) {\n      this.start();\n    } else {\n      if (typeof amount !== 'number') {\n        if (n >= 0 && n < 0.2) {\n          amount = 0.1;\n        } else if (n >= 0.2 && n < 0.5) {\n          amount = 0.04;\n        } else if (n >= 0.5 && n < 0.8) {\n          amount = 0.02;\n        } else if (n >= 0.8 && n < 0.99) {\n          amount = 0.005;\n        } else {\n          amount = 0;\n        }\n      }\n      n = clamp(n + amount, 0, 0.994);\n      this.set(n);\n    }\n  }\n/**\n * Set progress state\n * @param {?} n\n * @return {?}\n */\nset(n) {\n    this.progress = clamp(n, this.minimum, this.maximum);\n    this.updateState(this.progress, true);\n    /** if progress completed */\n    if (n === this.maximum) {\n      const /** @type {?} */ hide = () => {\n        /**\n         *  reset progress\n         *  Keep it { 0, false } to fadeOut progress-bar after complete\n         */\n        this.progress = 0;\n        this.updateState(this.progress, false);\n      };\n      const /** @type {?} */ complete = () => {\n        /**\n         * complete progressbar\n         * { 1, false } to complete progress-bar before hiding\n         */\n        this.updateState(this.progress, false);\n        setTimeout(hide, this.speed);\n      };\n      setTimeout(complete, this.speed);\n    }\n  }\n/**\n * Is progress started\n * @return {?}\n */\nisStarted(): boolean {\n    return this.progress > 0 && this.progress < this.maximum;\n  }\n/**\n * Update Progressbar State\n * @param {?} progress\n * @param {?} isActive\n * @return {?}\n */\nprivate updateState(progress, isActive) {\n    this.state.next({\n      active: isActive,\n      value: progress\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgProgressService_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProgressService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgProgressService.ctorParameters;\n/**\n * Progress state\n * @type {?}\n */\nNgProgressService.prototype.state;\n/**\n * Trickling stream\n * @type {?}\n */\nNgProgressService.prototype.trickling;\n/** @type {?} */\nNgProgressService.prototype.progress;\n/** @type {?} */\nNgProgressService.prototype.maximum;\n/** @type {?} */\nNgProgressService.prototype.minimum;\n/** @type {?} */\nNgProgressService.prototype.speed;\n/** @type {?} */\nNgProgressService.prototype.trickleSpeed;\n/** @type {?} */\nNgProgressService.prototype.pendingProgress;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgModule","Input","ChangeDetectionStrategy","Component","Injectable","Observable","Subject"],"mappings":";;;;;;AKQA;;;AAGA,IADC,KAAA,GAAA,UAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EACD;IACE,IAAI,CAAC,GAAG,GAAC,EAAI;QACX,OAAA,GAAA,CAAA;KACD;IACD,IAAI,CAAC,GAAG,GAAC,EAAI;QACX,OAAA,GAAA,CAAA;KACD;IACD,OAAA,CAAA,CAAA;CACD,CAAC;AACF,IAAA,iBAAA,IAAA,YAAA;IAgBA,SAAA,iBAAA,GAAA;QAAA,IAAA,KAAA,GAAA,IAAA,CAQG;;;;QApBH,IAAA,CAAA,KAAG,GAAA,IAAAO,oBAAA,EAAA,CAAA;;;;QAIH,IAAA,CAAA,SADG,GAAA,IAAAA,oBAAA,EAAA,CAAA;QAGD,IAAF,CAAA,QAAU,GADG,CAAA,CAAE;QAEb,IAAF,CAAA,OAAS,GADG,CAAA,CAAE;QAEZ,IAAF,CAAA,OAAS,GADG,IAAA,CAAK;QAEf,IAAF,CAAA,KAAO,GADG,GAAA,CAAI;QAEZ,IAAF,CAAA,YAAc,GADG,GAAA,CAAI;QAEX,IAAV,CAAA,eAAU,GAAkB,CAAA,CAAE;QAG1B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,YAA7B;YACM,OAAOD,0BAAU;iBACd,KAAK,CAAC,CAAC,EAAE,KAAI,CAAC,YAAY,CAAC;iBAC3B,SAAS,CAAC,YAAnB,EAAyB,OAAA,KAAI,CAAC,SAAS,EAAE,CAAzC,EAAyC,CAAC;iBACjC,EAAE,CAAC,YAAZ,EAAkB,OAAA,KAAI,CAAC,GAAG,EAAE,CAA5B,EAA4B,CAAC,CAAC;SACzB,CAAC,CAAC,SAAS,EAAE,CAAC;KAChB;;;;IAIH,iBAAA,CAAA,SAAA,CAAA,KADG,GACH,YAAA;QACI,IAAI,CADC,eAAC,EAAe,CAAE;QAEvB,IAAI,CADC,KAAC,EAAK,CAAE;KAEd,CAAH;;;;IAIA,iBAAA,CAAA,SAAA,CAAA,GAHG,GAGH,YAAA;QACI,IAAI,CAHC,eAAC,EAAe,CAAE;QAIvB,IAAI,IAHC,CAAI,eAAC,IAAkB,CAAA,EAAG;YAI7B,IAAI,CAHC,IAAC,EAAI,CAAE;SAIb;KACF,CAAH;;;;IAIA,iBAAA,CAAA,SAAA,CAAA,KALG,GAKH,YAAA;QACI,IAAI,CALC,eAAC,GAAiB,CAAA,CAAE;QAMzB,IAAI,CALC,IAAC,EAAI,CAAE;KAMb,CAAH;;;;;IAKA,iBAAA,CAAA,SAAA,CAAA,KAPG,GAOH,YAAA;QACI,IAAI,CAPC,IAAC,CAAI,SAAC,EAAS,EAAG;YAQrB,IAAI,CAPC,GAAC,CAAG,IAAC,CAAI,OAAC,CAAO,CAAC;SAQxB;QACD,IAAI,CAPC,SAAC,CAAS,IAAC,EAAI,CAAE;KAQvB,CAAH;;;;;IAKA,iBAAA,CAAA,SAAA,CAAA,IATG,GASH,YAAA;;QAEI,IAAI,IATC,CAAI,SAAC,EAAS,EAAG;YAUpB,IAAI,CATC,GAAC,CAAG,EAAC,GAAI,EAAA,GAAK,IAAA,CAAK,MAAC,EAAM,CAAE,CAAC;YAUlC,IAAI,CATC,GAAC,CAAG,IAAC,CAAI,OAAC,CAAO,CAAC;SAUxB;KACF,CAAH;;;;;;IAMA,iBAAA,CAAA,SAAA,CAAA,GAZG,GAYH,UAZG,MAAA,EAYH;QACI,qBAZI,CAAA,GAAI,IAAA,CAAK,QAAC,CAAQ;;QActB,IAAI,CAZC,IAAC,CAAI,SAAC,EAAS,EAAG;YAarB,IAAI,CAZC,KAAC,EAAK,CAAE;SAad;aAZM;YAaL,IAAI,OAZO,MAAA,KAAW,QAAA,EAAU;gBAa9B,IAAI,CAZC,IAAI,CAAA,IAAK,CAAA,GAAI,GAAA,EAAK;oBAarB,MAAM,GAZG,GAAA,CAAI;iBAad;qBAZM,IAAA,CAAK,IAAI,GAAA,IAAO,CAAA,GAAI,GAAA,EAAK;oBAa9B,MAAM,GAZG,IAAA,CAAK;iBAaf;qBAZM,IAAA,CAAK,IAAI,GAAA,IAAO,CAAA,GAAI,GAAA,EAAK;oBAa9B,MAAM,GAZG,IAAA,CAAK;iBAaf;qBAZM,IAAA,CAAK,IAAI,GAAA,IAAO,CAAA,GAAI,IAAA,EAAM;oBAa/B,MAAM,GAZG,KAAA,CAAM;iBAahB;qBAZM;oBAaL,MAAM,GAZG,CAAA,CAAE;iBAaZ;aACF;YACD,CAAC,GAZG,KAAA,CAAM,CAAC,GAAG,MAAA,EAAQ,CAAA,EAAG,KAAA,CAAM,CAAC;YAahC,IAAI,CAZC,GAAC,CAAG,CAAC,CAAC,CAAC;SAab;KACF,CAAH;;;;;;IAMA,iBAAA,CAAA,SAAA,CAAA,GAfG,GAeH,UAfG,CAAA,EAeH;QAAA,IAAA,KAAA,GAAA,IAAA,CAuBG;QAtBC,IAAI,CAfC,QAAC,GAAU,KAAA,CAAM,CAAC,EAAE,IAAA,CAAK,OAAC,EAAQ,IAAA,CAAK,OAAC,CAAO,CAAC;QAgBrD,IAAI,CAfC,WAAC,CAAW,IAAC,CAAI,QAAC,EAAS,IAAA,CAAK,CAAC;;QAiBtC,IAAI,CAfC,KAAK,IAAA,CAAK,OAAC,EAAQ;YAgBtB,qBAfM,MAAA,GAAO,YAenB;;;;;gBAKQ,KAAI,CAfC,QAAC,GAAU,CAAA,CAAE;gBAgBlB,KAAI,CAfC,WAAC,CAAW,KAAC,CAAI,QAAC,EAAS,KAAA,CAAM,CAAC;aAgBxC,CAfC;YAgBF,qBAfM,QAAA,GAAW,YAevB;;;;;gBAKQ,KAAI,CAfC,WAAC,CAAW,KAAC,CAAI,QAAC,EAAS,KAAA,CAAM,CAAC;gBAgBvC,UAAU,CAfC,MAAC,EAAK,KAAA,CAAK,KAAC,CAAK,CAAC;aAgB9B,CAfC;YAgBF,UAAU,CAfC,QAAC,EAAS,IAAA,CAAK,KAAC,CAAK,CAAC;SAgBlC;KACF,CAAH;;;;;IAKA,iBAAA,CAAA,SAAA,CAAA,SAdG,GAcH,YAAA;QACI,OAdO,IAAA,CAAK,QAAC,GAAU,CAAA,IAAK,IAAA,CAAK,QAAC,GAAU,IAAA,CAAK,OAAC,CAAO;KAe1D,CAAH;;;;;;;IAXG,iBAAH,CAAA,SAAA,CAAA,WAAG,GAAA,UAAA,QAAA,EAAA,QAAA,EAAH;QAmBI,IAAI,CAlBC,KAAC,CAAK,IAAC,CAAI;YAmBd,MAAM,EAlBE,QAAA;YAmBR,KAAK,EAlBE,QAAA;SAmBR,CAlBC,CAAC;KAmBJ,CAAH;;CAhJA,EAAA,CAAA,CAAA;AA+HO,iBAAP,CAAA,UAAO,GAAoC;IAmB3C,EAlBE,IAAA,EAAMD,wBAAA,EAAW;CAmBlB,CAlBC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAqBA,CArBD,EAqBC,CAAC;ADvKF,IAAA,qBAAA,IAAA,YAAA;;;;IAIA,SAAA,qBAAA,CAAqB,eAAiB,EAAtC;QAAqB,IAArB,CAAA,eAAqB,GAAA,eAAA,CAAiB;KACnC;;;;;;IAMH,qBAAA,CAAA,SAAA,CAAA,SAJG,GAIH,UAJG,GAAA,EAAA,IAAA,EAIH;QAAA,IAAA,KAAA,GAAA,IAAA,CAKG;QAJC,IAAI,CAJC,eAAC,CAAe,KAAC,EAAK,CAAE;QAK7B,OAJO,IAAA,CAAK,MAAC,CAAM,GAAC,CAAG,CAAC,OAAC,CAAO,YAIpC;YACM,KAAI,CAJC,eAAC,CAAe,IAAC,EAAI,CAAE;SAK7B,CAJC,CAAC;KAKJ,CAAH;;CAhBA,EAAA,CAAA,CAAA;AAaO,qBAAP,CAAA,UAAO,GAAoC;IAK3C,EAJE,IAAA,EAAMA,wBAAA,EAAW;CAKlB,CAJC;;;;AAED,qBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAOD,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,CAAD,EAAC,CAAC;AD7BF,IAAA,oBAAA,IAAA,YAAA;IAAA,SAAA,oBAAA,GAAA;;;;;;IAcA,oBAAA,CAAA,SAAA,CAAA,SAAG,GAAH,YAAA;QACI,qBAAI,MAAA,GAAS;YACX,UAAU,EAAE,MAAlB,GAAkB,IAAQ,CAAI,KAAC,GAA/B,KAAA,GAAoC,IAAM,CAAI,IAAK;YAC7C,eAAe,EAAE,IAAA,CAAK,KAAC;SACxB,CAAC;;;;QAIN,IAFK,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,IAAA;YAGC,oBAAoB,EAAE,CAAC,GAAG;YAC1B,kBAAkB,EAAE,CAAC;YACrB,oBAAoB,EAAE,GAAG;YACzB,kBAAkB,EAAE,CAAC;SACtB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAExD,QAAQ,IAFC,CAAI,aAAC;YAGZ,KAFK,aAAA;gBAGH,MAAM,GAFG,MAAA,CAAO,MAAC,CAAM,EAAC,EAAG,MAAA,EAAQ;oBAGjC,SAAS,EAFE,cAErB,GAFqB,CAAgB,GAErC,QAFsC;oBAG5B,mBAAmB,EAFE,cAE/B,GAF+B,CAAgB,GAE/C,QAFgD;oBAGtC,gBAAgB,EAFE,cAE5B,GAF4B,CAAgB,GAE5C,QAF6C;oBAGnC,cAAc,EAFE,cAE1B,GAF0B,CAAgB,GAE1C,QAF2C;oBAGjC,eAAe,EAFE,cAE3B,GAF2B,CAAgB,GAE3C,QAF4C;iBAGnC,CAFC,CAAC;gBAGH,MAAM;YACR,KAFK,WAAA;gBAGH,MAAM,GAFG,MAAA,CAAO,MAAC,CAAM,EAAC,EAAG,MAAA,EAAQ;oBAGjC,SAAS,EAFE,YAErB,GAFqB,CAAc,GAEnC,MAFoC;oBAG1B,mBAAmB,EAFE,YAE/B,GAF+B,CAAc,GAE7C,MAF8C;oBAGpC,gBAAgB,EAFE,YAE5B,GAF4B,CAAc,GAE1C,MAF2C;oBAGjC,cAAc,EAFE,YAE1B,GAF0B,CAAc,GAExC,MAFyC;oBAG/B,eAAe,EAFE,YAE3B,GAF2B,CAAc,GAEzC,MAF0C;iBAGjC,CAFC,CAAC;gBAGH,MAAM;YACR;gBACE,MAAM,GAFG,MAAA,CAAO,MAAC,CAAM,EAAC,EAAG,MAAA,EAAQ;oBAGjC,UAAU,EAFE,CAAI,GAE1B,GAF2B;iBAGlB,CAFC,CAAC;SAGN;QACD,OAFO,MAAA,CAAO;KAGf,CAAH;;;;;IAKA,oBAAA,CAAA,SAAA,CAAA,YAJG,GAIH,YAAA;QACI,OAJO;YAKL,SAAS,EAJE,WAIjB,GAJiB,IAAa,CAAI,KAAC,GAInC,YAAA,GAJwC,IAAa,CAAI,KAAM;SAK1D,CAJC;KAKH,CAAH;;;;;IAKA,oBAAA,CAAA,SAAA,CAAA,YAPG,GAOH,UAPG,CAAA,EAOH;QACI,OAPO,CAAA;YAQL,oBAAoB,EAPE,CAAA,CAAE,GAAG,CAAA;YAQ3B,kBAAkB,EAPE,CAAA,CAAE;YAQtB,oBAAoB,EAPE,CAAA,GAAI,CAAA;YAQ1B,kBAAkB,EAPE,CAAA;SAQrB,CAPC,IAAC,CAAI,SAAC,CAAS,IAAI,GAAA,CAAI;KAQ1B,CAAH;;;;IAIA,oBAAA,CAAA,SAAA,CAAA,cATG,GASH,YAAA;QACI,OATO;YAUL,oBAAoB,EATE,WAAA;YAUtB,kBAAkB,EATE,gBAAA;YAUpB,oBAAoB,EATE,gBAAA;YAUtB,kBAAkB,EATE,WAAA;SAUrB,CATC,IAAC,CAAI,SAAC,CAAS,CAAC;KAUnB,CAAH;;CAtFA,EAAA,CAAA,CAAA;AA8EO,oBAAP,CAAA,UAAO,GAAoC;IAU3C,EATE,IAAA,EAAMD,uBAAA,EAAW,IAAA,EAAM,CAAA;gBAUvB,QAAQ,EATE,iBAAA;gBAUV,QAAQ,EATE,kcAiBH;gBACP,MAAM,EATE,CAAA,yvEAuHN,CATC;gBAUH,eAAe,EATED,qCAAA,CAAwB,MAAC;aAU3C,EATC,EAAG;CAUJ,CATC;;;;AAED,oBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EAYA,CAZD,EAYC,CAhBC;AAMK,oBAAP,CAAA,cAAO,GAAyD;IAYhE,OAAO,EAXE,CAAA,EAAG,IAAA,EAAMD,mBAAA,EAAM,EAAE;IAY1B,eAAe,EAXE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAYlC,MAAM,EAXE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAYzB,OAAO,EAXE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAY1B,aAAa,EAXE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAYhC,WAAW,EAXE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAY9B,OAAO,EAXE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAY1B,OAAO,EAXE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;CAYzB,CAXC;ADrNF,IAAA,iBAAA,IAAA,YAAA;;;;IAqBA,SAAA,iBAAA,CAFqB,QAAU,EAE/B;QAFqB,IAArB,CAAA,QAAqB,GAAA,QAAA,CAAU;;;;QAf/B,IAAA,CAAA,IAEI,GAAA,QAAA,CAAA;QADD,IAAH,CAAA,aAAgB,GAEG,QAAA,CAAS;QADzB,IAAH,CAAA,WAAc,GAEG,IAAA,CAAK;QADnB,IAAH,CAAA,SAAY,GAEG,sBAAA,CAAuB;QADnC,IAAH,CAAA,KAAQ,GAEG,SAAA,CAAU;QADlB,IAAH,CAAA,KAAQ,GAEG,KAAA,CAAM;QADd,IAAH,CAAA,OAAU,GAEG,CAAA,CAAE;QADZ,IAAH,CAAA,OAAU,GAEG,IAAA,CAAK;QADf,IAAH,CAAA,KAAQ,GAEG,GAAA,CAAI;QADZ,IAAH,CAAA,YAAe,GAEG,GAAA,CAAI;KAOnB;;;;;IAKH,iBAAA,CAAA,SAAA,CAAA,WALG,GAKH,UALG,OAAA,EAKH;QAEI,qBALM,OAAA,GAAU,OAAA,CAAQ,OAAC,CAAO;QAMhC,qBALM,OAAA,GAAU,OAAA,CAAQ,OAAC,CAAO;QAMhC,qBALM,OAAA,GAAU,OAAA,CAAQ,KAAC,CAAK;QAM9B,qBALM,UAAA,GAAa,OAAA,CAAQ,YAAC,CAAY;QAMxC,qBALM,OAAA,GAAU,OAAA,CAAQ,MAAC,CAAM;QAO/B,IAAI,OALC,EAAQ;YAMX,IAAI,OALO,OAAA,CAAQ,YAAC,KAAgB,WAAA,IAAe,OAAA,CAAQ,YAAC,KAAgB,OAAA,CAAQ,aAAC,EAAc;gBAMjG,IAAI,OALC,CAAO,YAAC,GAAc,CAAA,IAAK,OAAA,CAAQ,YAAC,GAAc,CAAA,EAAG;oBAMxD,MALM,yCAAA,CAA0C;iBAMjD;qBALM;oBAML,IAAI,CALC,QAAC,CAAQ,OAAC,GAAS,OAAA,CAAQ,YAAC,CAAY;iBAM9C;aACF;SACF;QAED,IAAI,OALC,EAAQ;YAMX,IAAI,OALO,OAAA,CAAQ,YAAC,KAAgB,WAAA,IAAe,OAAA,CAAQ,YAAC,KAAgB,OAAA,CAAQ,aAAC,EAAc;gBAMjG,IAAI,OALC,CAAO,YAAC,GAAc,CAAA,IAAK,OAAA,CAAQ,YAAC,GAAc,CAAA,EAAG;oBAMxD,MALM,yCAAA,CAA0C;iBAMjD;qBALM;oBAML,IAAI,CALC,QAAC,CAAQ,OAAC,GAAS,OAAA,CAAQ,YAAC,CAAY;iBAM9C;aACF;SACF;QAED,IAAI,OALC,EAAQ;YAMX,IAAI,OALO,OAAA,CAAQ,YAAC,KAAgB,WAAA,IAAe,OAAA,CAAQ,YAAC,KAAgB,OAAA,CAAQ,aAAC,EAAc;gBAMjG,IAAI,CALC,QAAC,CAAQ,KAAC,GAAO,OAAA,CAAQ,YAAC,CAAY;aAM5C;SACF;QAED,IAAI,UALC,EAAW;YAMd,IAAI,OALO,UAAA,CAAW,YAAC,KAAgB,WAAA,IAAe,UAAA,CAAW,YAAC,KAAgB,UAAA,CAAW,aAAC,EAAc;gBAM1G,IAAI,CALC,QAAC,CAAQ,YAAC,GAAc,UAAA,CAAW,YAAC,CAAY;aAMtD;SACF;QAED,IAAI,OALC,EAAQ;YAMX,IAAI,OALO,OAAA,CAAQ,YAAC,KAAgB,WAAA,IAAe,OAAA,CAAQ,YAAC,KAAgB,OAAA,CAAQ,aAAC,EAAc;gBAMjG,IAAI,OALC,CAAO,YAAC,EAAa;oBAMxB,IAAI,CALC,QAAC,CAAQ,KAAC,EAAK,CAAE;iBAMvB;qBALM;oBAML,IAAI,CALC,QAAC,CAAQ,IAAC,EAAI,CAAE;iBAMtB;aACF;SACF;KACF,CAAH;;;;IAIA,iBAAA,CAAA,SAAA,CAAA,WAPG,GAOH,YAAA;QACI,IAAI,CAPC,QAAC,CAAQ,KAAC,CAAK,WAAC,EAAW,CAAE;QAQlC,IAAI,CAPC,QAAC,CAAQ,SAAC,CAAS,WAAC,EAAW,CAAE;KAQvC,CAAH;;CAnFA,EAAA,CAAA,CAAA;AA8EO,iBAAP,CAAA,UAAO,GAAoC;IAQ3C,EAPE,IAAA,EAAME,uBAAA,EAAW,IAAA,EAAM,CAAA;gBAQvB,QAAQ,EAPE,aAAA;gBAQV,QAAQ,EAPE,wRAiBU;gBACpB,MAAM,EAPE,CAAA,4FAYN,CAPC;gBAQH,eAAe,EAPED,qCAAA,CAAwB,MAAC;aAQ3C,EAPC,EAAG;CAQJ,CAPC;;;;AAED,iBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA;IAUD,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,CAAD,EAAC,CAAC;AARK,iBAAP,CAAA,cAAO,GAAyD;IAUhE,MAAM,EATE,CAAA,EAAG,IAAA,EAAMD,mBAAA,EAAM,EAAE;IAUzB,eAAe,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAUlC,aAAa,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAUhC,WApBE,EAWW,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAU9B,OAAO,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAU1B,OAAO,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAU1B,SAAS,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAU5B,SAAS,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAU5B,OAAO,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAU1B,cAAc,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;IAUjC,QAAQ,EATE,CAAA,EAAG,IAAA,EAAMA,mBAAA,EAAM,EAAE;CAU1B,CATC;AFpHF,IAAA,gBAAA,IAAA,YAAA;IAAA,SAAA,gBAAA,GAAA;;;CAAA,EAAA,CAAA,CAAA;AAEuC,gBAAvC,CAAA,UAAuC,GAAoC;IAD3E,EAEE,IAAA,EAAMD,sBAAA,EAAU,IAAA,EAAM,CAAA;gBADtB,YAAY,EAEE;oBADZ,iBAAiB;oBACjB,oBAAoB;iBACrB;gBACD,OAAO,EAEE;oBADP,iBAAiB;iBAClB;gBACD,OAAO,EAEE;oBADPD,4BAAY;iBACb;gBACD,SAAS,EAEE;oBADT,iBAAiB;iBAClB;aACF,EAEC,EAAG;CADJ,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,YAAD,EAAC,OAAA,EACA,CADD,EACC,CAAC,AC1BF;;;;;;;;;;"}